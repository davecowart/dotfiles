#zmodload zsh/zprof
export ZSH=$HOME/.dotfiles

export PROJECTS=~/Projects

# save environment variables in ~/.localrc to keep them private
if [[ -a ~/.localrc ]]
then
  source ~/.localrc
fi

# load all the zsh files
typeset -U config_files
config_files=($ZSH/**/*.zsh)
#
# load the path files
for file in ${(M)config_files:#*/path.zsh}
do
  source $file
done

# load everything but the path and completion files
for file in ${${config_files:#*/path.zsh}:#*/completion.zsh}
do
  source $file
done

# initialize autocomplete here, otherwise functions won't be loaded
autoload -Uz compinit
for dump in ~/.zcompdump(N.mh+24); do
  compinit
done
compinit -C

zstyle ':completion:*' menu select

# change directories without cd
setopt auto_cd

# load every completion after autocomplete loads
for file in ${(M)config_files:#*/completion.zsh}
do
  source $file
done

unset config_files

export PATH=~/.rbenv/shims:/usr/local/bin:/usr/local/bin/git:/usr/bin:/bin:/usr/sbin:/sbin:$HOME/bin:/usr/local/sbin:~/.tmuxifier/bin:~/.dotfiles/bin:~/go/bin:~/flutter/bin:$PATH

eval $(thefuck --alias)
eval $(thefuck --alias fuck)
eval $(thefuck --alias fix)

eval "$(rbenv init -)"

# environment variables for fastlane supply
export LC_ALL=en_US.UTF-8
export LANG=en_US.UTF-8

# tabtab source for serverless package
# uninstall by removing these lines or running `tabtab uninstall serverless`
[[ -f /usr/local/lib/node_modules/serverless/node_modules/tabtab/.completions/serverless.zsh ]] && . /usr/local/lib/node_modules/serverless/node_modules/tabtab/.completions/serverless.zsh

export PATH=/Users/dave/.local/bin:$PATH

export PATH=/usr/local/opt/python/libexec/bin:/Users/dave/Library/Python/3.7/bin:$PATH
#zprof

export NVM_DIR="$HOME/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion

# place this after nvm initialization!
autoload -U add-zsh-hook
load-nvmrc() {
  local node_version="$(nvm version)"
  local nvmrc_path="$(nvm_find_nvmrc)"
  if [ -n "$nvmrc_path" ]; then
    local nvmrc_node_version=$(nvm version "$(cat "${nvmrc_path}")")
    if [ "$nvmrc_node_version" = "N/A" ]; then
      nvm install
    elif [ "$nvmrc_node_version" != "$node_version" ]; then
      nvm use
    fi
  elif [ "$node_version" != "$(nvm version default)" ]; then
    echo "Reverting to nvm default version"
    nvm use default
  fi
}
add-zsh-hook chpwd load-nvmrc
load-nvmrc

export PATH="$PATH:$HOME/.dotnet/tools"

# Add RVM to PATH for scripting. Make sure this is the last PATH variable change.
export PATH="$PATH:$HOME/.rvm/bin"

# Add ADB
export PATH="$PATH:$HOME/Library/Android/sdk/platform-tools"
export ANDROID_HOME="$HOME/Library/Android/sdk"
export ANDROID_SDK_ROOT="$HOME/Library/Android/sdk"

# Add Go
export PATH="$PATH:/usr/local/go/bin"

# Add NTWRK build of telepresence
export PATH="$PATH:$HOME/Library/NTWRK/bin"

# export GOPATH="/usr/local/go"

# Add Java
# export JAVA_HOME="/Library/Java/JavaVirtualMachines/adoptopenjdk-8.jdk/Contents/Home"
export JAVA_HOME=$(/usr/libexec/java_home -v11)
#export JAVA_HOME=$(/usr/libexec/java_home -v1.8)
